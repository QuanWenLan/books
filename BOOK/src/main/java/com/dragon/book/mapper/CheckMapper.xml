<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dragon.book.mapper.CheckMapper">
    <resultMap id="borrowResultMap" type="com.dragon.book.model.TBorrow">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="isbn" property="isbn" jdbcType="VARCHAR"/>
        <result column="sm" property="sm" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="lxfs" property="lxfs" jdbcType="VARCHAR"/>
        <result column="jyrq" property="jyrq" jdbcType="DATE"/>
        <result column="jhghrq" property="jhghrq" jdbcType="DATE"/>
        <result column="xjrq" property="xjrq" jdbcType="DATE"/>
        <result column="ghrq" property="ghrq" jdbcType="DATE"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="jyzt" property="jyzt" jdbcType="INTEGER"/>
        <result column="bz" property="bz" jdbcType="LONGVARCHAR"/>
        <association property="user" javaType="com.dragon.book.model.TSysUser"
                     column="userId" foreignColumn="userId">
            <id column="user_id" property="userId"/>
            <result column="xm" property="xm"/>
        </association>
    </resultMap>

    <resultMap id="checkSh" type="com.dragon.book.model.TBorrowVo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="isbn" property="isbn" jdbcType="VARCHAR"/>
        <result column="sm" property="sm" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="lxfs" property="lxfs" jdbcType="VARCHAR"/>
        <result column="jyrq" property="jyrq" jdbcType="DATE"/>
        <result column="jhghrq" property="jhghrq" jdbcType="DATE"/>
        <result column="xjrq" property="xjrq" jdbcType="DATE"/>
        <result column="ghrq" property="ghrq" jdbcType="DATE"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="jyzt" property="jyzt" jdbcType="INTEGER"/>
        <result column="bz" property="bz" jdbcType="LONGVARCHAR"/>
        <result column="sh" property="sh" jdbcType="INTEGER"/>
        <association property="user" javaType="com.dragon.book.model.TSysUser"
                     column="userId" foreignColumn="userId">
            <id column="user_id" property="userId"/>
            <result column="xm" property="xm"/>
        </association>
    </resultMap>
    <!--借阅审核-->
    <select id="getTBorrowCheckList" resultMap="borrowResultMap" parameterType="map">
		SELECT e.* ,b.type_id FROM
		(SELECT s.xm,t.* FROM t_borrow t LEFT JOIN t_sys_user s ON t.user_id = s.user_id ) e,t_book b
		WHERE b.isbn=e.isbn
        <if test="typeId != null and typeId != ''">
            and b.type_id = #{typeId,jdbcType=INTEGER}
        </if>
        <if test="status != null and status != ''">
            and e.status = #{status,jdbcType=INTEGER}
        </if>
        <if test="eBookXm != null and eBookXm != ''">
            and e.sm like CONCAT('%',#{eBookXm,jdbcType=VARCHAR},'%')
        </if>
        order by e.id
        <if test="first != null and rowNum != null">
            limit #{first,jdbcType=INTEGER},#{rowNum,jdbcType=INTEGER}
        </if>
	</select>

    <select id="getCounts" resultType="int">
        SELECT count(*) FROM
        (SELECT s.xm,t.* FROM t_borrow t LEFT JOIN t_sys_user s ON t.user_id = s.user_id ) e,t_book b
        WHERE b.isbn=e.isbn
        <if test="typeId != null and typeId != ''">
            and b.type_id = #{typeId,jdbcType=INTEGER}
        </if>
        <if test="status != null and status != ''">
            and e.status = #{status,jdbcType=INTEGER}
        </if>
        <if test="eBookXm != null and eBookXm != ''">
            and e.sm like CONCAT('%',#{eBookXm,jdbcType=VARCHAR},'%')
        </if>
    </select>

    <select id="getSingleCheckTBorrow" resultMap="borrowResultMap" parameterType="int">
        SELECT e.* FROM (SELECT s.xm,t.* FROM t_borrow t LEFT JOIN t_sys_user s ON t.user_id = s.user_id ) e
        WHERE  e.id = #{id,jdbcType=INTEGER}
    </select>

   <!--归还审核-->

    <select id="getTBorrowRevertListCounts" resultMap="borrowResultMap" parameterType="map">
        SELECT count(*) FROM
        (SELECT s.xm,t.* FROM t_borrow t LEFT JOIN t_sys_user s ON t.user_id = s.user_id ) e,t_book b
        WHERE b.isbn=e.isbn and e.status=1
        <if test="typeId != null and typeId != '' ">
            and b.type_id = #{typeId,jdbcType=INTEGER}
        </if>
        <if test="jyzt != null and jyzt != '' ">
            and e.jyzt = #{jyzt,jdbcType=INTEGER}
        </if>
        <if test="eBookXm != null and eBookXm != '' ">
            and e.sm like CONCAT('%',#{eBookXm,jdbcType=VARCHAR},'%')
        </if>
    </select>

    <select id="getTBorrowRevertList" resultMap="borrowResultMap" parameterType="map">
        SELECT e.* ,b.type_id FROM
        (SELECT s.xm,t.* FROM t_borrow t LEFT JOIN t_sys_user s ON t.user_id = s.user_id ) e,t_book b
        WHERE b.isbn=e.isbn and e.status=1
        <if test="typeId != null and typeId != '' ">
            and b.type_id = #{typeId,jdbcType=INTEGER}
        </if>
        <if test="jyzt != null and jyzt != '' ">
            and e.jyzt = #{jyzt,jdbcType=INTEGER}
        </if>
        <if test="eBookXm != null and eBookXm != '' ">
            and e.sm like CONCAT('%',#{eBookXm,jdbcType=VARCHAR},'%')
        </if>
        order by e.id
        <if test="first != null and rowNum != null">
            limit #{first,jdbcType=INTEGER},#{rowNum,jdbcType=INTEGER}
        </if>
    </select>

    <select id="getSingleRevertTBorrow" resultMap="checkSh" parameterType="int">
        SELECT e.*,o.sh FROM (SELECT s.xm,t.* FROM t_borrow t LEFT JOIN t_sys_user s ON t.user_id = s.user_id ) e ,t_store o
	    WHERE  o.isbn=e.isbn and e.id = #{id,jdbcType=INTEGER}
    </select>

    <update id="updateRevertTBorrowSh" parameterType="map" >
        update t_store
        set sh = #{sh,jdbcType=INTEGER}
        where isbn=#{isbn,jdbcType=VARCHAR}
    </update>
</mapper>